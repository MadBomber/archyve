#!/usr/bin/env ruby

path_prefix = "v1"
method = :get
body = nil
port = 3300

loop do
  if ARGV.first == '-p'
    method = :post
    ARGV.shift
    if ARGV.first == '-'
      body = $stdin.read
      ARGV.shift
    else
      body = File.read(ARGV.shift)
    end
  elsif ARGV.first == "-d"
    method = :delete
    ARGV.shift
    body = nil
  elsif ARGV.first == "-n"
    path_prefix = nil
    ARGV.shift
  elsif ARGV.first == "-P"
    ARGV.shift
    port = ARGV.shift
  else
    break
  end
end

params = ARGV[1..-1].map do |arg|
  name, value = arg.split('=')

  if name.nil? || value.nil?
    $stderr.puts "Invalid argument: #{arg}"
    exit(1)
  end

  [name, value]
end
path = ARGV[0]

require 'uri'
require 'httparty'
require 'json'

def puts_response(response)
  puts JSON.pretty_generate(response.parsed_response)
rescue
  puts response.body
end

# set ENV vars in config and run this script with `ops`
base_url = "#{ENV['API_BASE_URL']}:#{port}"
base_url = "#{base_url}/#{path_prefix}" unless path_prefix.nil?
param_string = URI.encode_www_form(params)
url = "#{base_url}/#{path}?#{param_string}"
headers = {
  'Accept' => 'application/json',
  'Authorization' => "Bearer #{ENV['DEFAULT_API_KEY']}",
  'X-Client-Id'   => "#{ENV['DEFAULT_CLIENT_ID']}",
}

require "pry"
response = HTTParty.send(method, url, headers: headers, body: body) do |chunk|
  next unless port == "11337"
end

if response.success?
  if port != 11337
    puts_response(response)
  end
else
  STDERR.puts "Error: #{response.code}"
  puts_response(response)
  exit(2)
end
